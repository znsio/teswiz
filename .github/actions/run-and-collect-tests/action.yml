name: Run and Collect Tests
description: |
  Run a test suite, capture its result, and upload test artifacts.
  Supports parameterized test execution for different platforms and configs.

inputs:
  id:
    description: "Short identifier for the test suite"
    required: true
  config-path:
    description: "Path to the test configuration file (.properties)"
    required: true
  tag:
    description: "Cucumber tag expression to run"
    required: true
  platform:
    description: "Test platform (web, android, api, etc.)"
    required: true
  applitools_api_key:
    description: "Applitools API key"
    required: true
  browserstack_username:
    description: "BrowserStack username"
    required: true
  browserstack_key:
    description: "BrowserStack key"
    required: true
  display-name:
    description: "Descriptive name of the test suite"
    required: true
  artifact-name:
    description: "Custom artifact name for results"
    required: true
  is-visual:
    description: "Enable visual testing (true/false)"
    required: true
  additional-env:
    description: "Additional environment variables"
    required: false
    default: ""

outputs:
  exit_code:
    description: "Exit code from the test run"

runs:
  using: "composite"
  steps:
    - name: Run ${{ inputs.display-name }}
      shell: bash
      run: |
        set +e
        echo "ðŸ“¦ Running ${{ inputs.display-name }}..."
        export APPLITOOLS_API_KEY="${{ inputs.applitools_api_key }}"
        export CLOUD_USERNAME="${{ inputs.browserstack_username }}"
        export CLOUD_KEY="${{ inputs.browserstack_key }}"
        export IS_VISUAL="${{ inputs.is-visual }}"
        export PLATFORM="${{ inputs.platform }}"
        export CONFIG="${{ inputs.config-path }}"
        export TAG="${{ inputs.tag }}"

        if [[ -n "${{ inputs.additional-env }}" ]]; then
          echo "Setting additional environment: ${{ inputs.additional-env }}"
          eval "export ${{ inputs.additional-env }}"
        fi

        ./gradlew run
        echo "exit_code=$?" >> "$GITHUB_OUTPUT"

    - name: Upload ${{ inputs.display-name }} Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.artifact-name }}
        path: target
